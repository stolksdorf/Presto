/* Eric Meyer's Reset CSS v2.0 - http://cssreset.com */
@import "codemirror/lib/codemirror.css";
html,
body,
div,
span,
applet,
object,
iframe,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
a,
abbr,
acronym,
address,
big,
cite,
code,
del,
dfn,
em,
img,
ins,
kbd,
q,
s,
samp,
small,
strike,
strong,
sub,
sup,
tt,
var,
b,
u,
i,
center,
dl,
dt,
dd,
ol,
ul,
li,
fieldset,
form,
label,
legend,
table,
caption,
tbody,
tfoot,
thead,
tr,
th,
td,
article,
aside,
canvas,
details,
embed,
figure,
figcaption,
footer,
header,
hgroup,
menu,
nav,
output,
ruby,
section,
summary,
time,
mark,
audio,
video {
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
  margin: 0;
  padding: 0;
}
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section {
  display: block;
}
body {
  line-height: 1;
}
ol,
ul {
  list-style: none;
}
blockquote,
q {
  quotes: none;
}
blockquote:before,
blockquote:after,
q:before,
q:after {
  content: none;
}
table {
  border-collapse: collapse;
  border-spacing: 0;
}
/******** Responsive Media Queries *********/
/*
	usage : @media @mobile{
		width : 100%;
	}
 */
/**
 *    6 Column Grid
 */
.row {
  display: -webkit-flex;
  display: -ms-flexbox;
  letter-spacing: -0.31em;
  *letter-spacing: normal;
  *word-spacing: -0.43em;
  text-rendering: optimizespeed;
  -webkit-flex-flow: row wrap;
  -ms-flex-flow: row wrap;
  -webkit-align-content: flex-start;
  -ms-align-content: flex-start;
  align-content: flex-start;
}
.row > * {
  display: inline-block;
  vertical-align: top;
  box-sizing: border-box;
  letter-spacing: normal;
  word-spacing: normal;
  *display: inline;
  zoom: 1;
  text-rendering: auto;
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
}
.row > .offset1,
.row > .offset2,
.row > .offset3,
.row > .offset4,
.row > .offset5,
.row > .offset6,
.row > .offset7,
.row > .offset8,
.row > .offset9,
.row > .offset10,
.row > .offset11,
.row > .offset12 {
  margin-left: 0%;
}
.row > .col1,
.row > .col2,
.row > .col3,
.row > .col4,
.row > .col5,
.row > .col6,
.row > .col7,
.row > .col8,
.row > .col9,
.row > .col10,
.row > .col11,
.row > .col12 {
  width: 100%;
}
@media only screen and (min-width : 768px) {
  .row.gutters {
    margin: 0 -0.8rem;
  }
  .row.gutters > * > * {
    margin: 0 0.8rem;
  }
  .row > .col1 {
    width: 8.3334%;
  }
  .row > .col2 {
    width: 16.6667%;
  }
  .row > .col3 {
    width: 25%;
  }
  .row > .col4 {
    width: 33.3334%;
  }
  .row > .col5 {
    width: 41.6667%;
  }
  .row > .col6 {
    width: 50%;
  }
  .row > .col7 {
    width: 58.3334%;
  }
  .row > .col8 {
    width: 66.6667%;
  }
  .row > .col9 {
    width: 75%;
  }
  .row > .col10 {
    width: 83.3334%;
  }
  .row > .col11 {
    width: 91.6667%;
  }
  .row > .col12 {
    width: 100%;
  }
  .row > .offset1 {
    margin-left: 8.3334%;
  }
  .row > .offset2 {
    margin-left: 16.6667%;
  }
  .row > .offset3 {
    margin-left: 25%;
  }
  .row > .offset4 {
    margin-left: 33.3334%;
  }
  .row > .offset5 {
    margin-left: 41.6667%;
  }
  .row > .offset6 {
    margin-left: 50%;
  }
  .row > .offset7 {
    margin-left: 58.3334%;
  }
  .row > .offset8 {
    margin-left: 66.6667%;
  }
  .row > .offset9 {
    margin-left: 75%;
  }
  .row > .offset10 {
    margin-left: 83.3334%;
  }
  .row > .offset11 {
    margin-left: 91.6667%;
  }
  .row > .offset12 {
    margin-left: 100%;
  }
}
@media only screen and (max-width : 767px) {
  .row.m_gutters {
    margin: 0 -0.8rem;
  }
  .row.m_gutters > * > * {
    margin: 0 0.8rem;
  }
  .row > .m_col1 {
    width: 8.3334%;
  }
  .row > .m_col2 {
    width: 16.6667%;
  }
  .row > .m_col3 {
    width: 25%;
  }
  .row > .m_col4 {
    width: 33.3334%;
  }
  .row > .m_col5 {
    width: 41.6667%;
  }
  .row > .m_col6 {
    width: 50%;
  }
  .row > .m_col7 {
    width: 58.3334%;
  }
  .row > .m_col8 {
    width: 66.6667%;
  }
  .row > .m_col9 {
    width: 75%;
  }
  .row > .m_col10 {
    width: 83.3334%;
  }
  .row > .m_col11 {
    width: 91.6667%;
  }
  .row > .m_col12 {
    width: 100%;
  }
  .row > .m_offset1 {
    margin-left: 8.3334%;
  }
  .row > .m_offset2 {
    margin-left: 16.6667%;
  }
  .row > .m_offset3 {
    margin-left: 25%;
  }
  .row > .m_offset4 {
    margin-left: 33.3334%;
  }
  .row > .m_offset5 {
    margin-left: 41.6667%;
  }
  .row > .m_offset6 {
    margin-left: 50%;
  }
  .row > .m_offset7 {
    margin-left: 58.3334%;
  }
  .row > .m_offset8 {
    margin-left: 66.6667%;
  }
  .row > .m_offset9 {
    margin-left: 75%;
  }
  .row > .m_offset10 {
    margin-left: 83.3334%;
  }
  .row > .m_offset11 {
    margin-left: 91.6667%;
  }
  .row > .m_offset12 {
    margin-left: 100%;
  }
}
/***************************
	  Standard Animations
****************************/
/***************************
		Fun Animations
****************************/
html,
body {
  position: relative;
  height: 100%;
  min-height: 100%;
  background-color: #eee;
  font-family: 'Lato', sans-serif;
  color: #333333;
}
.container {
  position: relative;
  max-width: 1000px;
  margin: 0 auto;
  padding-right: 20px;
  padding-left: 20px;
}
h1 {
  margin-top: 10px;
  margin-bottom: 15px;
  font-size: 2em;
}
h2 {
  margin-top: 10px;
  margin-bottom: 15px;
  font-size: 1.5em;
  font-weight: 900;
}
h3 {
  margin-top: 5px;
  margin-bottom: 7px;
  font-size: 1em;
  font-weight: 900;
}
p {
  margin-bottom: 1em;
  font-size: 16px;
  color: #333333;
  line-height: 1.5em;
}
code {
  background-color: #F8F8F8;
  font-family: 'Courier', mono;
  color: black;
  white-space: pre;
}
a {
  color: inherit;
}
strong {
  font-weight: bold;
}
button {
  -webkit-transition: background-color 0.25s ease;
  -moz-transition: background-color 0.25s ease;
  -o-transition: background-color 0.25s ease;
  transition: background-color 0.25s ease;
  display: inline-block;
  padding: 0.6em 1.2em;
  cursor: pointer;
  background-color: #27AE60;
  font-family: "Lato", Helvetica, Arial, sans-serif;
  font-size: 15px;
  color: white;
  text-decoration: none;
  border: none;
  outline: none;
}
button:hover {
  background-color: #229955;
}
button:active {
  background-color: #1e8449;
}
button:disabled {
  background-color: #BDC3C7 !important;
}
.admin {
  position: relative;
}
.admin .sidebar {
  position: fixed;
  height: 100%;
  width: 120px;
  background-color: #C0392B;
  color: white;
}
.admin .sidebar h2 i.fa {
  margin-right: 10px;
}
.admin .sidebar .optionsContainer {
  width: 100%;
}
.admin .sidebar .optionsContainer .option {
  display: block;
  text-decoration: none;
  box-sizing: border-box;
  width: 100%;
  padding: 15px;
  cursor: pointer;
}
.admin .sidebar .optionsContainer .option:hover,
.admin .sidebar .optionsContainer .option.selected {
  background-color: #ffffff;
  color: #C0392B;
}
.admin .container {
  margin-left: 120px;
}
.calcs .newCalcButton {
  position: fixed;
  top: 20px;
  right: 20px;
  padding: 10px;
}
.calcs .calculator {
  display: block;
  padding: 10px;
  text-decoration: none;
}
.calcs .calculator:hover {
  background-color: rgba(39, 174, 96, 0.2);
}
.calcs .calculator .icon {
  float: left;
  height: 50px;
  width: 50px;
  margin-right: 20px;
  color: white;
  text-align: center;
}
.calcs .calculator .icon p {
  margin-bottom: 0px;
}
.calcs .calculator .icon i {
  margin-top: 10px;
  font-size: 30px;
}
.calcs .calculator .icon.yellow {
  background-color: #F39C12;
}
.calcEdit label {
  vertical-align: top;
  min-width: 100px;
  display: inline-block;
}
.calcEdit textarea {
  font-family: 'Lato';
}
.calcCard {
  display: block;
  padding: 10px;
  border: #333 solid 1px;
  text-decoration: none;
}
.calcCard .icon {
  float: left;
  height: 50px;
  width: 50px;
  margin-right: 20px;
  color: white;
  text-align: center;
}
.calcCard .icon p {
  margin-bottom: 0px;
}
.calcCard .icon i {
  margin-top: 10px;
  font-size: 30px;
}
.calcCard .icon.yellow {
  background-color: #F39C12;
}
.calcCard .icon.red {
  background-color: #C0392B;
}
.calcCard .icon.blue {
  background-color: #2980B9;
}
.calcCard .icon.teal {
  background-color: #16A085;
}
.calcCard .icon.purple {
  background-color: #8E44AD;
}
.calcCard .icon.steel {
  background-color: #2C3E50;
}
.calcCard .icon.yellow {
  background-color: #F39C12;
}
/* BASICS */
.CodeMirror {
  /* Set height, width, borders, and global font properties here */
  font-family: monospace;
  height: 300px;
  color: black;
}
/* PADDING */
.CodeMirror-lines {
  padding: 4px 0;
  /* Vertical padding around content */
}
.CodeMirror pre {
  padding: 0 4px;
  /* Horizontal padding of content */
}
.CodeMirror-scrollbar-filler,
.CodeMirror-gutter-filler {
  background-color: white;
  /* The little square between H and V scrollbars */
}
/* GUTTER */
.CodeMirror-gutters {
  border-right: 1px solid #ddd;
  background-color: #f7f7f7;
  white-space: nowrap;
}
.CodeMirror-linenumber {
  padding: 0 3px 0 5px;
  min-width: 20px;
  text-align: right;
  color: #999;
  white-space: nowrap;
}
.CodeMirror-guttermarker {
  color: black;
}
.CodeMirror-guttermarker-subtle {
  color: #999;
}
/* CURSOR */
.CodeMirror-cursor {
  border-left: 1px solid black;
  border-right: none;
  width: 0;
}
/* Shown when moving in bi-directional text */
.CodeMirror div.CodeMirror-secondarycursor {
  border-left: 1px solid silver;
}
.cm-fat-cursor .CodeMirror-cursor {
  width: auto;
  border: 0;
  background: #7e7;
}
.cm-fat-cursor div.CodeMirror-cursors {
  z-index: 1;
}
.cm-animate-fat-cursor {
  width: auto;
  border: 0;
  -webkit-animation: blink 1.06s steps(1) infinite;
  -moz-animation: blink 1.06s steps(1) infinite;
  animation: blink 1.06s steps(1) infinite;
  background-color: #7e7;
}
@-moz-keyframes blink {
  50% {
    background-color: transparent;
  }
}
@-webkit-keyframes blink {
  50% {
    background-color: transparent;
  }
}
@keyframes blink {
  50% {
    background-color: transparent;
  }
}
/* Can style cursor different in overwrite (non-insert) mode */
.cm-tab {
  display: inline-block;
  text-decoration: inherit;
}
.CodeMirror-ruler {
  border-left: 1px solid #ccc;
  position: absolute;
}
/* DEFAULT THEME */
.cm-s-default .cm-header {
  color: blue;
}
.cm-s-default .cm-quote {
  color: #090;
}
.cm-negative {
  color: #d44;
}
.cm-positive {
  color: #292;
}
.cm-header,
.cm-strong {
  font-weight: bold;
}
.cm-em {
  font-style: italic;
}
.cm-link {
  text-decoration: underline;
}
.cm-strikethrough {
  text-decoration: line-through;
}
.cm-s-default .cm-keyword {
  color: #708;
}
.cm-s-default .cm-atom {
  color: #219;
}
.cm-s-default .cm-number {
  color: #164;
}
.cm-s-default .cm-def {
  color: #00f;
}
.cm-s-default .cm-variable-2 {
  color: #05a;
}
.cm-s-default .cm-variable-3 {
  color: #085;
}
.cm-s-default .cm-comment {
  color: #a50;
}
.cm-s-default .cm-string {
  color: #a11;
}
.cm-s-default .cm-string-2 {
  color: #f50;
}
.cm-s-default .cm-meta {
  color: #555;
}
.cm-s-default .cm-qualifier {
  color: #555;
}
.cm-s-default .cm-builtin {
  color: #30a;
}
.cm-s-default .cm-bracket {
  color: #997;
}
.cm-s-default .cm-tag {
  color: #170;
}
.cm-s-default .cm-attribute {
  color: #00c;
}
.cm-s-default .cm-hr {
  color: #999;
}
.cm-s-default .cm-link {
  color: #00c;
}
.cm-s-default .cm-error {
  color: #f00;
}
.cm-invalidchar {
  color: #f00;
}
.CodeMirror-composing {
  border-bottom: 2px solid;
}
/* Default styles for common addons */
div.CodeMirror span.CodeMirror-matchingbracket {
  color: #0f0;
}
div.CodeMirror span.CodeMirror-nonmatchingbracket {
  color: #f22;
}
.CodeMirror-matchingtag {
  background: rgba(255, 150, 0, 0.3);
}
.CodeMirror-activeline-background {
  background: #e8f2ff;
}
/* STOP */
/* The rest of this file contains styles related to the mechanics of
   the editor. You probably shouldn't touch them. */
.CodeMirror {
  position: relative;
  overflow: hidden;
  background: white;
}
.CodeMirror-scroll {
  overflow: scroll !important;
  /* Things will break if this is overridden */
  /* 30px is the magic margin used to hide the element's real scrollbars */
  /* See overflow: hidden in .CodeMirror */
  margin-bottom: -30px;
  margin-right: -30px;
  padding-bottom: 30px;
  height: 100%;
  outline: none;
  /* Prevent dragging from highlighting the element */
  position: relative;
}
.CodeMirror-sizer {
  position: relative;
  border-right: 30px solid transparent;
}
/* The fake, visible scrollbars. Used to force redraw during scrolling
   before actual scrolling happens, thus preventing shaking and
   flickering artifacts. */
.CodeMirror-vscrollbar,
.CodeMirror-hscrollbar,
.CodeMirror-scrollbar-filler,
.CodeMirror-gutter-filler {
  position: absolute;
  z-index: 6;
  display: none;
}
.CodeMirror-vscrollbar {
  right: 0;
  top: 0;
  overflow-x: hidden;
  overflow-y: scroll;
}
.CodeMirror-hscrollbar {
  bottom: 0;
  left: 0;
  overflow-y: hidden;
  overflow-x: scroll;
}
.CodeMirror-scrollbar-filler {
  right: 0;
  bottom: 0;
}
.CodeMirror-gutter-filler {
  left: 0;
  bottom: 0;
}
.CodeMirror-gutters {
  position: absolute;
  left: 0;
  top: 0;
  z-index: 3;
}
.CodeMirror-gutter {
  white-space: normal;
  height: 100%;
  display: inline-block;
  margin-bottom: -30px;
  /* Hack to make IE7 behave */
  *zoom: 1;
  *display: inline;
}
.CodeMirror-gutter-wrapper {
  position: absolute;
  z-index: 4;
  background: none !important;
  border: none !important;
}
.CodeMirror-gutter-background {
  position: absolute;
  top: 0;
  bottom: 0;
  z-index: 4;
}
.CodeMirror-gutter-elt {
  position: absolute;
  cursor: default;
  z-index: 4;
}
.CodeMirror-gutter-wrapper {
  -webkit-user-select: none;
  -moz-user-select: none;
  user-select: none;
}
.CodeMirror-lines {
  cursor: text;
  min-height: 1px;
  /* prevents collapsing before first draw */
}
.CodeMirror pre {
  /* Reset some styles that the rest of the page might have set */
  -moz-border-radius: 0;
  -webkit-border-radius: 0;
  border-radius: 0;
  border-width: 0;
  background: transparent;
  font-family: inherit;
  font-size: inherit;
  margin: 0;
  white-space: pre;
  word-wrap: normal;
  line-height: inherit;
  color: inherit;
  z-index: 2;
  position: relative;
  overflow: visible;
  -webkit-tap-highlight-color: transparent;
}
.CodeMirror-wrap pre {
  word-wrap: break-word;
  white-space: pre-wrap;
  word-break: normal;
}
.CodeMirror-linebackground {
  position: absolute;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  z-index: 0;
}
.CodeMirror-linewidget {
  position: relative;
  z-index: 2;
  overflow: auto;
}
.CodeMirror-code {
  outline: none;
}
/* Force content-box sizing for the elements where we expect it */
.CodeMirror-scroll,
.CodeMirror-sizer,
.CodeMirror-gutter,
.CodeMirror-gutters,
.CodeMirror-linenumber {
  -moz-box-sizing: content-box;
  box-sizing: content-box;
}
.CodeMirror-measure {
  position: absolute;
  width: 100%;
  height: 0;
  overflow: hidden;
  visibility: hidden;
}
.CodeMirror-cursor {
  position: absolute;
}
.CodeMirror-measure pre {
  position: static;
}
div.CodeMirror-cursors {
  visibility: hidden;
  position: relative;
  z-index: 3;
}
div.CodeMirror-dragcursors {
  visibility: visible;
}
.CodeMirror-focused div.CodeMirror-cursors {
  visibility: visible;
}
.CodeMirror-selected {
  background: #d9d9d9;
}
.CodeMirror-focused .CodeMirror-selected {
  background: #d7d4f0;
}
.CodeMirror-crosshair {
  cursor: crosshair;
}
.CodeMirror-line::selection,
.CodeMirror-line > span::selection,
.CodeMirror-line > span > span::selection {
  background: #d7d4f0;
}
.CodeMirror-line::-moz-selection,
.CodeMirror-line > span::-moz-selection,
.CodeMirror-line > span > span::-moz-selection {
  background: #d7d4f0;
}
.cm-searching {
  background: #ffa;
  background: rgba(255, 255, 0, 0.4);
}
/* IE7 hack to prevent it from returning funny offsetTops on the spans */
.CodeMirror span {
  *vertical-align: text-bottom;
}
/* Used to force a border model for a node */
.cm-force-border {
  padding-right: .1px;
}
@media print {
  /* Hide the cursor when printing */
  .CodeMirror div.CodeMirror-cursors {
    visibility: hidden;
  }
}
/* See issue #2901 */
.cm-tab-wrap-hack:after {
  content: '';
}
/* Help users use markselection to safely style text background */
span.CodeMirror-selectedtext {
  background: none;
}

/*# sourceMappingURL=data:application/json;base64, */
